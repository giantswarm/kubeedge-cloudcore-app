# This job creates a cilium-agent daemonset which only runs on edge nodes.
# It is a modified copy of the existing cilium agent daemonset.
#
# This job *only runs during initial install* of the chart.
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "resource.default.name" . }}-cilium-edge-daemonset-job"
  namespace: "{{ .Release.Namespace }}"
  labels:
    {{- include "labels.common" . | nindent 4 }}
  annotations:
    "helm.sh/hook": "post-install"
    "helm.sh/hook-delete-policy": "before-hook-creation"
    "helm.sh/hook-weight": "5"
spec:
  ttlSecondsAfterFinished: 86400 # 24h
  template:
    metadata:
      name: "{{ include "resource.default.name" . }}-cilium-edge-daemonset-job"
      namespace: "{{ $.Release.Namespace }}"
      labels:
        {{- include "labels.common" . | nindent 8 }}
    spec:
      restartPolicy: Never
      serviceAccountName: "{{- include "kubeEdgeHookServiceAccount" . }}"
      securityContext:
        runAsUser: {{ include "securityContext.runAsUser" . }}
        runAsGroup: {{ include "securityContext.runAsGroup" . }}
      containers:
        - name: create-cilium-agent-daemonset-for-kubeedge
          {{- include "jobContainerCommon" . | nindent 10 }}
          command:
            - "/bin/bash"
            - "-c"
            - |
              set -o errexit
              set -o pipefail
              set -o nounset
              CILIUM_DS=$(mktemp)
              KUBEEDGE_DS=$(mktemp)
              KUBEEDGE_DS_PATCH="
              spec:
                template:
                  spec:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                            - matchExpressions:
                              - key: node-role.kubernetes.io/edge
                                operator: Exists
                    containers:
                    - args:
                      - --config-dir=/tmp/cilium/config-map
                      - --k8s-api-server=127.0.0.1:10550
                      - --auto-create-cilium-node-resource=true
                      name: cilium-agent
                    initContainers:
                    - args:
                      - --k8s-api-server=127.0.0.1:10550
                      name: config
              "

              # retrieve existing cilium daemonset
              if ! kubectl get daemonset -n kube-system cilium -o json >"${CILIUM_DS}"; then
                echo "[ERROR] Failed to retrieve cilium daemonset."
                exit 1
              fi

              # modify daemonset for edge nodes and apply it
              if jq 'del(.status) |
                del(.metadata.annotations["kubectl.kubernetes.io/last-applied-configuration"]) |
                del(.metadata.creationTimestamp, .metadata.resourceVersion, .metadata.uid) |
                .metadata.name = "cilium-kubeedge"' "${CILIUM_DS}" > "${KUBEEDGE_DS}"; then
                kubectl apply -f "$FILE_NAME" || {
                  echo "[ERROR] Failed to apply cilium-kubeedge daemonset."
                  exit 1
                }
              else
                echo "[ERROR] Failed to modify cilium-kubeedge daemonset with jq."
                exit 1
              fi

              # patch the new kubeedge daemonset
              if kubectl patch daemonset -n kube-system cilium-kubeedge --patch "$PATCH"; then
                echo "[INFO] cilium-kubeedge daemonset patched successfully."
              else
                echo "[ERROR] Failed to patch cilium-kubeedge daemonset."
                exit 1
              fi
